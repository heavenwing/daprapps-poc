server.port = 8081

## default connection pool
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.idle-timeout=500000
#spring.datasource.hikari.max-lifetime=540000
#spring.datasource.hikari.connection-timeout=30000

# spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=5
# spring.datasource.hikari.idleTimeout=600000
# spring.datasource.hikari.maxLifetime=1800000
# spring.datasource.hikari.connectionTimeout=30000

## PostgreSQL
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=daprapps
#spring.datasource.password=daprapps@1234
spring.datasource.primary.jdbc-url=jdbc:sqlserver://localhost:1433;database=mdm_product;
spring.datasource.primary.username=local
spring.datasource.primary.password=fake
spring.datasource.primary.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

spring.datasource.secondary.jdbc-url=jdbc:sqlserver://localhost:1433;database=mdm_company_legacy;
spring.datasource.secondary.username=local
spring.datasource.secondary.password=fake
spring.datasource.secondary.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.show-sql=true

# enable by vm options -Dprovider.service.enable=true -Dprovider.service.host={host}
provider.service.enable=true
provider.service.host=http://localhost:8080

#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create